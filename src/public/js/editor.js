// Generated by CoffeeScript 1.9.0
(function() {
  var Backbone, Editor, Response, Wallhack, ace, ed, jsRoot, _,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jsRoot = this;

  _ = jsRoot._, ace = jsRoot.ace, Backbone = jsRoot.Backbone, Wallhack = jsRoot.Wallhack;

  Response = (function(_super) {
    __extends(Response, _super);

    function Response() {
      return Response.__super__.constructor.apply(this, arguments);
    }

    Response.prototype.setData = function(_at_error, _at_lines) {
      this.error = _at_error;
      this.lines = _at_lines;
      return this.lines != null ? this.lines : this.lines = [];
    };

    Response.prototype.render = function() {
      if (this.error) {
        return this.$el.html(this.error.message);
      }
      return this.$el.html(Wallhack.tpls.response({
        lines: this.lines
      }));
    };

    return Response;

  })(Backbone.View);

  Editor = (function(_super) {
    __extends(Editor, _super);

    function Editor(options) {
      this.onExecDone = __bind(this.onExecDone, this);
      _.extend(this, options);
      this.editor = ace.edit(this.editor);
      this.editor.getSession().setMode("ace/mode/sql");
      options.events = {
        'click button.execute': 'execute'
      };
      this.response = new Response({
        el: this.responseEl,
        template: Wallhack.tpls.reponse
      });
      Editor.__super__.constructor.apply(this, arguments);
    }

    Editor.prototype.execute = function() {
      return Wallhack.execute(this.getQuery(), this.onExecDone);
    };

    Editor.prototype.setQuery = function(sql) {
      return this.editor.getSession().setValue(sql);
    };

    Editor.prototype.getQuery = function(sql) {
      return this.editor.getSession().getValue(sql);
    };

    Editor.prototype.onExecDone = function(error, lines) {
      this.response.setData(error, lines);
      return this.response.render();
    };

    return Editor;

  })(Backbone.View);

  ed = new Editor({
    el: '#editor',
    editor: 'sqlEditor',
    responseEl: '#sqlResponse'
  });

  ed.setQuery("SELECT TOP 10 * FROM tblMenu ORDER BY UtcLastModifiedOn DESC");

  Wallhack.components.Editor = Editor;

}).call(this);
